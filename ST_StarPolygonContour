DROP FUNCTION IF EXISTS ST_StarPolygonContour(
geom GEOMETRY,
innerRadius float,
outerRadius float,
numberVertices integer)

CREATE OR REPLACE FUNCTION ST_StarPolygonContour(
geom GEOMETRY,
innerRadius float,
outerRadius float,
numberVertices integer)
RETURNS GEOMETRY AS
$BODY$
WITH 
    tbla AS (SELECT $1),
    tblb AS (SELECT ST_ExteriorRing(ST_RegularPolygon(geom, $2, $4)) geom FROM tbla),
    tblc AS (SELECT ST_ExteriorRing(ST_RegularPolygon(geom, $3, $4)) geom FROM tbla),
    tbld AS (SELECT ROW_NUMBER() OVER () num, geom FROM (SELECT geom FROM tblb UNION SELECT geom FROM tblc) foo),
    tble AS (SELECT num, ST_Rotate(geom, -pi()/$4, ST_Centroid(geom)) geom FROM tbld WHERE num IN (1) GROUP BY num, geom 
    UNION SELECT num, geom FROM tbld WHERE num IN (2)),
    intervals AS (SELECT generate_series (0, $4) steps),
    lineinterpnt AS (SELECT steps AS stp, num, ST_LineInterpolatePoint(geom, steps/(SELECT count(steps)::float-1 FROM intervals)) geom FROM tble, 
    intervals GROUP BY intervals.steps, num, geom ORDER BY intervals.steps, num)
    SELECT ST_MakeLine(geom) geom FROM lineinterpnt;
$BODY$
LANGUAGE SQL

SELECT ST_StarPolygonContour(geom, 0.001, 0.01, 5) geom FROM <points_table_4326>

important: experimental function, it is necessary to follow the orientation of the figures!
